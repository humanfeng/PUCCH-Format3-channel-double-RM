function [pilot_sequence,inter_pilot_out] = ...
                                        inter_pilot(reference,pucch_type)
global CPflag;
% global N_ULRB;
% global N_RB_sc;
% M=N_ULRB*N_RB_sc;
M = 12;
N=14;
inter_pilot_out = zeros(M,N);
k=1;
if pucch_type < 3                   %格式1/1a/1b插入导频
    if CPflag==0                      %普通CP
        dmrsnum=6;                  %每子帧中DMRS占用的符号数目
        index = [2 3 4 9 10 11];  %每子帧中DMRS所在的符号下标
      for m=M:-1:1
            for i=1:dmrsnum
            inter_pilot_out(m, index(i) +1) = reference(k);%从最低频率位置开始映射pilot
            pilot_sequence(m,i) = reference(k);%将RS排列成M行的矩阵用于信道估计
            k=k+1;
            end
      end
    else CPflag==1                   %扩展CP
        dmrsnum=4;
         index = [2 3 9 10];
         for m=M:-1:1
            for i=1:dmrsnum
            inter_pilot_out(i, index(m) +1) = reference(k);
            pilot_sequence(m,i) = reference(k);
            k=k+1;
            end
         end
    end
else                                   %格式2/2a/2b插入导频
      if CPflag==0
        dmrsnum=4;                  %每子帧中DMRS占用的符号数目
        index = [1 5 8 12];  %每子帧中DMRS所在的符号下标
      for m=1:dmrsnum
            for i= M:-1:1
            inter_pilot_out(i,index(m) +1) = reference(k);
            pilot_sequence(i,m) = reference(k);
            k=k+1;
            end
      end
    else CPflag==1
        dmrsnum=4;
         index = [1 5 8 12];
         for m=1:dmrsnum
            for i=M:-1:1 
            inter_pilot_out(i, index(m) +1) = reference(k);
            pilot_sequence(i,m) = reference(k);
            k=k+1;
            end
         end
      end
end
%==============================OK=================================